[{"path":[]},{"path":"https://emf-creaf.github.io/traits4models/articles/SpeciesParameterization.html","id":"aim","dir":"Articles","previous_headings":"Introduction","what":"Aim","title":"Building species parameter tables for medfate","text":"vignette describes procedures used create fill species parameter data tables (SpParamsES, SpParamsFR SpParamsUS included package traits4models) simulations packages medfate medfateland. assumed set plant trait databases harmonized used source data parameter estimation (see vignette Trait database haramonization. IMPORTANT: vignette self-contained, sense reproduced without access data sets included. Nevertheless, intended serve example species parameterization regions.","code":""},{"path":"https://emf-creaf.github.io/traits4models/articles/SpeciesParameterization.html","id":"required-packages","dir":"Articles","previous_headings":"Introduction","what":"Required packages","title":"Building species parameter tables for medfate","text":"Installed version medfate ver 4.3.1 higher. Package traits4models required species parameter estimation process, includes several functions facilitate parsing data sources parameter values. Package traits4models installed GitHub: example, package medfuels also needed includes allometric coefficients Mediterranean shrub species. regions, however, sources sought allometric data. , package medfuels installed GitHub: medfate, traits4models medfuels, load common packages employ vignette:","code":"install.packages(\"medfate\") remotes::install_github(\"emf-creaf/traits4models\") remotes::install_github(\"spif-ctfc/medfuels\") library(medfate) library(traits4models) library(medfuels) # library(IFNread) library(tidyverse) library(openxlsx) library(sf)"},{"path":"https://emf-creaf.github.io/traits4models/articles/SpeciesParameterization.html","id":"target-parameters","dir":"Articles","previous_headings":"Introduction","what":"Target parameters","title":"Building species parameter tables for medfate","text":"set species parameters needed run models included medfate described data frame called SpParamsDefinition included package. obvious medfate requires sheer number parameters searched manually, even small number target species. Hence, important draw values plant allometry plant trait data bases. model parameters counterpart publicly-available databases, even using data bases unlikely one find appropriate parameter values species. help situation, medfate inbuilt imputation procedures estimate missing values many parameters starting model simulations. However, imputed parameter estimates normally worse estimates coming data bases. Hence, process-based model users put strong effort finding source parameter data starting simulations.","code":""},{"path":"https://emf-creaf.github.io/traits4models/articles/SpeciesParameterization.html","id":"steps-to-build-a-species-parameter-table","dir":"Articles","previous_headings":"Introduction","what":"Steps to build a species parameter table","title":"Building species parameter tables for medfate","text":"following sections describe different steps used obtain species parameter table, can grouped six main steps: remainder vignette illustrates steps.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/traits4models/articles/SpeciesParameterization.html","id":"target-taxonomic-entities","dir":"Articles","previous_headings":"Initializing a species parameter table","what":"Target taxonomic entities","title":"Building species parameter tables for medfate","text":"species parameter table medfate starts vector species names. , assume names correspond taxa (genus, species, subspecies, …) mentioned national forest inventory, specifically Spanish National Forest Inventory (SFI). Note taxon names forest inventory correspond concepts taxonomic reference. Hence, important harmonize taxonomy reference used traits4models, .e. World Flora Online, function harmonize_taxonomy_WFO() may useful. assume harmonization conducted SFI taxon list included external data package: NFIName corresponds name used Spanish forest inventory, originalName contains names used taxonomy harmonization function harmonize_taxonomy_WFO(), acceptedName corresponds accepted name according World Flora Online. Column originalName values NFIName scientific taxa, otherwise missing. Non-scientific plant names (e.g. ‘Cultivated trees’) taxa names identified used medfate simulations matched plant trait data. Therefore, need filter names using:","code":"file <- system.file(\"extdata\", \"NFI_ES_mapping.csv\", package = \"traits4models\") NFI_ES_mapping <- read.table(file, sep=\";\", header=TRUE, na.strings = \"\") |>   tibble::as_tibble() |>   dplyr::mutate(NFICode = as.character(NFICode)) NFI_ES_mapping ## # A tibble: 480 × 10 ##    NFICode NFIName             originalName  originalNameAuthorship acceptedName ##    <chr>   <chr>               <chr>         <chr>                  <chr>        ##  1 31      Abies alba          Abies alba    Mill.                  Abies alba   ##  2 32      Abies pinsapo       Abies pinsapo Boiss.                 Abies pinsa… ##  3 307     Acacia dealbata     Acacia dealb… Link                   Acacia deal… ##  4 207     Acacia melanoxylon  Acacia melan… R.Br. in W.T.Aiton     Acacia mela… ##  5 7       Acacia spp.         Acacia        NA                     Acacia       ##  6 76      Acer campestre      Acer campest… L.                     Acer campes… ##  7 276     Acer monspessulanum Acer monspes… L.                     Acer monspe… ##  8 376     Acer negundo        Acer negundo  L.                     Acer negundo ##  9 476     Acer opalus         Acer opalus   Mill.                  Acer opalus  ## 10 676     Acer platanoides    Acer platano… L.                     Acer platan… ## # ℹ 470 more rows ## # ℹ 5 more variables: acceptedNameAuthorship <chr>, family <chr>, genus <chr>, ## #   specificEpithet <chr>, taxonRank <chr> spp_filt <- NFI_ES_mapping |>   dplyr::filter(!is.na(acceptedName))"},{"path":"https://emf-creaf.github.io/traits4models/articles/SpeciesParameterization.html","id":"initialization","dir":"Articles","previous_headings":"Initializing a species parameter table","what":"Initialization","title":"Building species parameter tables for medfate","text":"Package traits4models provides function init_medfate_params() initialize species parameter table medfate according given input, can either vector plant names data frame taxonomic information. call function NFI_ES_mapping. Column originalName used match Species names forest objects derived Spanish forest inventory, column acceptedName used ensure matching trait information done using appropriate (harmonized) taxonomic nomenclature. columns used fill taxonomy: result empty data frame, except first columns, correspond taxonomic hierarchy entity (genus, family, group, …), missing taxonomic information completed using package taxize. number rows output data frame can larger input, default function creates additional rows species (sub-species species cited) genus (species genus cited).","code":"SpParams <- traits4models::init_medfate_params(spp_filt,                                                verbose = FALSE) SpParams |> tibble::as_tibble() ## # A tibble: 548 × 154 ##    Name         SpIndex AcceptedName Species Genus Family Order Group GrowthForm ##    <chr>          <int> <chr>        <chr>   <chr> <chr>  <chr> <chr> <lgl>      ##  1 Abies              0 Abies        NA      Abies Pinac… Pina… Gymn… NA         ##  2 Abies alba         1 Abies alba   Abies … Abies Pinac… Pina… Gymn… NA         ##  3 Abies pinsa…       2 Abies pinsa… Abies … Abies Pinac… Pina… Gymn… NA         ##  4 Acacia             3 Acacia       Acacia  Acac… Fabac… Faba… Angi… NA         ##  5 Acacia deal…       4 Acacia deal… Acacia… Acac… Fabac… Faba… Angi… NA         ##  6 Acacia mela…       5 Acacia mela… Acacia… Acac… Fabac… Faba… Angi… NA         ##  7 Acer               6 Acer         Acer    Acer  Sapin… Sapi… Angi… NA         ##  8 Acer               7 Acer         Acer    Acer  Sapin… Sapi… Angi… NA         ##  9 Acer campes…       8 Acer campes… Acer c… Acer  Sapin… Sapi… Angi… NA         ## 10 Acer monspe…       9 Acer monspe… Acer m… Acer  Sapin… Sapi… Angi… NA         ## # ℹ 538 more rows ## # ℹ 145 more variables: LifeForm <lgl>, LeafShape <lgl>, LeafSize <lgl>, ## #   PhenologyType <lgl>, DispersalType <lgl>, Hmed <lgl>, Hmax <lgl>, ## #   Z50 <lgl>, Z95 <lgl>, fHDmin <lgl>, fHDmax <lgl>, a_ash <lgl>, b_ash <lgl>, ## #   a_bsh <lgl>, b_bsh <lgl>, a_btsh <lgl>, b_btsh <lgl>, cr <lgl>, BTsh <lgl>, ## #   a_fbt <lgl>, b_fbt <lgl>, c_fbt <lgl>, a_cr <lgl>, b_1cr <lgl>, ## #   b_2cr <lgl>, b_3cr <lgl>, c_1cr <lgl>, c_2cr <lgl>, a_cw <lgl>, …"},{"path":"https://emf-creaf.github.io/traits4models/articles/SpeciesParameterization.html","id":"filling-structural-parameters-from-forest-inventory-data","dir":"Articles","previous_headings":"","what":"Filling structural parameters from forest inventory data","title":"Building species parameter tables for medfate","text":"species parameters can withdrawn data target forest inventory simulations conducted. load data frame (actually sf object) containing data Third Spanish Forest Inventory: Column forest contains forest inventory plots used withdraw parameters. example, first forest object : traits4models provides function fill_medfate_inventory_traits() perform parameter extraction: Species matching performed column Species tree shrub data tables Name species parameter table; following information extracted: GrowthForm: Growth form according usage forest inventory. example, species cited treeData tables shrubData tables, growth form \"Tree\". Hmax: Maximum tree/shrub height (cm), according Height column treeData shrubData quantile_Hmax parameter. Hmed: Median tree/shrub height (cm), according Height column treeData shrubData quantile_Hmed parameter. fHDmin, fHDmax: Minimum maximum height diameter ratio trees, according Height DBH columns treeData quantile_fHDmin quantile_fHDmax parameters, respectively.","code":"sf_IFN3 <- readRDS(\"~/OneDrive/mcaceres_work/model_initialisation/medfate_initialisation/IFN/Products/IFN3/Spain/IFN3_spain_final_ETRS89H30.rds\") sf_IFN3 ## Simple feature collection with 98497 features and 14 fields ## Geometry type: POINT ## Dimension:     XY ## Bounding box:  xmin: -1001644 ymin: 3132856 xmax: 1124640 ymax: 4857060 ## Projected CRS: ETRS89 / UTM zone 30N ## # A tibble: 98,497 × 15 ##    Provincia Estadillo Clase Subclase IDPARCELA IDCLASE ID       id    elevation ##  * <chr>     <chr>     <chr> <chr>    <chr>     <chr>   <chr>    <chr>     <dbl> ##  1 35        0001      A     1        350001    A1      350001_… 3500…       276 ##  2 35        0002      A     1        350002    A1      350002_… 3500…       561 ##  3 35        0003      A     1        350003    A1      350003_… 3500…       333 ##  4 35        0004      A     1        350004    A1      350004_… 3500…       350 ##  5 35        0005      A     1        350005    A1      350005_… 3500…       602 ##  6 35        0007      A     4        350007    A4      350007_… 3500…       576 ##  7 35        0008      A     4C       350008    A4C     350008_… 3500…       609 ##  8 35        0010      A     4        350010    A4      350010_… 3500…       262 ##  9 35        0011      A     4        350011    A4      350011_… 3500…       424 ## 10 35        0012      A     3C       350012    A3C     350012_… 3500…       612 ## # ℹ 98,487 more rows ## # ℹ 6 more variables: slope <dbl>, aspect <dbl>, soil <list>, forest <list>, ## #   forest_allrecords <named list>, geom <POINT [m]> sf_IFN3$forest[[1]] ## $treeData ## [1] IFNcode  Species  DBH      Height   N        Z50      Z95      OrdenIf2 ## [9] OrdenIf3 ## <0 rows> (or 0-length row.names) ##  ## $shrubData ##   IFNcode               Species Height Cover      Z50 Z95 ## 1    0121            Rubus spp.    200    10 151.6395 684 ## 2    0162        Euphorbia spp.    200    70 133.0397 577 ## 3    0163 Hypericum canariensis    170    30 126.9674 543 ## 4    0166         Rumex lunaria    180    60 113.0630 467 ##  ## $herbCover ## [1] NA ##  ## $herbHeight ## [1] NA ##  ## attr(,\"class\") ## [1] \"forest\" \"list\" SpParams<- traits4models::fill_medfate_inventory_traits(SpParams, sf_IFN3,                                                          progress = FALSE)"},{"path":"https://emf-creaf.github.io/traits4models/articles/SpeciesParameterization.html","id":"filling-allometric-coefficients","dir":"Articles","previous_headings":"","what":"Filling allometric coefficients","title":"Building species parameter tables for medfate","text":"","code":"allom_path = \"~/OneDrive/mcaceres_work/model_development/medfate_development/MedfateSpeciesParametrization/AllometryDatabases/\""},{"path":"https://emf-creaf.github.io/traits4models/articles/SpeciesParameterization.html","id":"tree-foliar-biomass","dir":"Articles","previous_headings":"Filling allometric coefficients","what":"Tree foliar biomass","title":"Building species parameter tables for medfate","text":"","code":"fb_models <- openxlsx::read.xlsx(paste0(allom_path, \"TreeAllometries/TreeAllometries.xlsx\"), sheet= \"Tree_FB_models\", rowNames = TRUE) SpParams <- traits4models::fill_medfate_allometries(SpParams, fb_models, \"foliarbiomass\")"},{"path":"https://emf-creaf.github.io/traits4models/articles/SpeciesParameterization.html","id":"tree-crown-ratio","dir":"Articles","previous_headings":"Filling allometric coefficients","what":"Tree crown ratio","title":"Building species parameter tables for medfate","text":"","code":"cr_models <- openxlsx::read.xlsx(paste0(allom_path,\"TreeAllometries/TreeAllometries.xlsx\"),                                     sheet= \"Tree_CR_models\", rowNames = TRUE) SpParams <- traits4models::fill_medfate_allometries(SpParams, cr_models, \"crownratio\")"},{"path":"https://emf-creaf.github.io/traits4models/articles/SpeciesParameterization.html","id":"tree-crown-width","dir":"Articles","previous_headings":"Filling allometric coefficients","what":"Tree crown width","title":"Building species parameter tables for medfate","text":"","code":"cw_models <- openxlsx::read.xlsx(paste0(allom_path,\"TreeAllometries/TreeAllometries.xlsx\"),                                     sheet= \"Tree_CW_models\", rowNames = TRUE) SpParams <- traits4models::fill_medfate_allometries(SpParams, cw_models, \"crownwidth\")"},{"path":[]},{"path":"https://emf-creaf.github.io/traits4models/articles/SpeciesParameterization.html","id":"bark-thickness","dir":"Articles","previous_headings":"Filling allometric coefficients","what":"Bark thickness","title":"Building species parameter tables for medfate","text":"","code":"bt_models <- openxlsx::read.xlsx(paste0(allom_path,\"TreeAllometries/TreeAllometries.xlsx\"),                                     sheet= \"Tree_BT_models\", rowNames = TRUE) SpParams <- traits4models::fill_medfate_allometries(SpParams, bt_models, \"barkthickness\")"},{"path":"https://emf-creaf.github.io/traits4models/articles/SpeciesParameterization.html","id":"filling-parameters-from-harmonized-trait-databases","dir":"Articles","previous_headings":"","what":"Filling parameters from harmonized trait databases","title":"Building species parameter tables for medfate","text":"","code":"harmonized_trait_path <- \"~/OneDrive/EMF_datasets/PlantTraitDatabases/Products/harmonized\" trait_files <- list.files(path = harmonized_trait_path, full.names = FALSE) trait_files ##   [1] \"00_compilation_CCfineroot.rds\"                           ##   [2] \"00_compilation_CCleaf.rds\"                               ##   [3] \"00_compilation_CCsapwood.rds\"                            ##   [4] \"00_compilation_FineFuelRatio.rds\"                        ##   [5] \"00_compilation_Flammability_HeatContent.rds\"             ##   [6] \"00_compilation_Flammability_SAV.rds\"                     ##   [7] \"00_compilation_Phenology_Budburst.rds\"                   ##   [8] \"00_compilation_Phenology_Senescence.rds\"                 ##   [9] \"Baez_et_al_2022_BarkThickness.rds\"                       ##  [10] \"Baez_et_al_2022_GrowthForm.rds\"                          ##  [11] \"Baez_et_al_2022_Ks.rds\"                                  ##  [12] \"Baez_et_al_2022_LDMC.rds\"                                ##  [13] \"Baez_et_al_2022_LeafArea.rds\"                            ##  [14] \"Baez_et_al_2022_Nleaf.rds\"                               ##  [15] \"Baez_et_al_2022_SLA.rds\"                                 ##  [16] \"Baez_et_al_2022_WoodDensity.rds\"                         ##  [17] \"Bartlett_et_al_2012.rds\"                                 ##  [18] \"Bartlett_et_al_2016.rds\"                                 ##  [19] \"Bjorkman_et_al_2018_Hact.rds\"                            ##  [20] \"Bjorkman_et_al_2018_LDMC.rds\"                            ##  [21] \"Bjorkman_et_al_2018_LeafArea.rds\"                        ##  [22] \"Bjorkman_et_al_2018_Nleaf.rds\"                           ##  [23] \"Bjorkman_et_al_2018_SeedMass.rds\"                        ##  [24] \"Bjorkman_et_al_2018_SLA.rds\"                             ##  [25] \"Bjorkman_et_al_2018_Z95.rds\"                             ##  [26] \"Chianucci_et_al_2018_LeafAngle.rds\"                      ##  [27] \"Choat_et_al_2012_XFT.rds\"                                ##  [28] \"Duursma_et_al_2018.rds\"                                  ##  [29] \"Falster_et_al_2021_Al2As.rds\"                            ##  [30] \"Falster_et_al_2021_Hact.rds\"                             ##  [31] \"Falster_et_al_2021_Jmax.rds\"                             ##  [32] \"Falster_et_al_2021_Ks.rds\"                               ##  [33] \"Falster_et_al_2021_LeafAngle.rds\"                        ##  [34] \"Falster_et_al_2021_LeafArea.rds\"                         ##  [35] \"Falster_et_al_2021_LeafDensity.rds\"                      ##  [36] \"Falster_et_al_2021_LeafDuration.rds\"                     ##  [37] \"Falster_et_al_2021_LeafEPS.rds\"                          ##  [38] \"Falster_et_al_2021_LeafPI0.rds\"                          ##  [39] \"Falster_et_al_2021_LeafShape.rds\"                        ##  [40] \"Falster_et_al_2021_LeafWidth.rds\"                        ##  [41] \"Falster_et_al_2021_LifeForm.rds\"                         ##  [42] \"Falster_et_al_2021_Nsapwood.rds\"                         ##  [43] \"Falster_et_al_2021_SeedMass.rds\"                         ##  [44] \"Falster_et_al_2021_SLA.rds\"                              ##  [45] \"Falster_et_al_2021_SRL.rds\"                              ##  [46] \"Falster_et_al_2021_StemEPS.rds\"                          ##  [47] \"Falster_et_al_2021_VCstem_P12.rds\"                       ##  [48] \"Falster_et_al_2021_VCstem_P50.rds\"                       ##  [49] \"Falster_et_al_2021_VCstem_P88.rds\"                       ##  [50] \"Falster_et_al_2021_Vmax.rds\"                             ##  [51] \"Falster_et_al_2021_WoodDensity.rds\"                      ##  [52] \"Guerrero_Ramirez_et_al_2021_GRooT_FineRootDensity.rds\"   ##  [53] \"Guerrero_Ramirez_et_al_2021_GRooT_Nfineroot.rds\"         ##  [54] \"Guerrero_Ramirez_et_al_2021_GRooT_RootingDepth.rds\"      ##  [55] \"Guerrero_Ramirez_et_al_2021_GRooT_SRL.rds\"               ##  [56] \"Guillemot_et_al_2022.rds\"                                ##  [57] \"Henry_et_al_2019.rds\"                                    ##  [58] \"Hoshika_et_al_2018.rds\"                                  ##  [59] \"Kattge_et_al_2020_DispersalMode.rds\"                     ##  [60] \"Kattge_et_al_2020_GrowthForm.rds\"                        ##  [61] \"Kattge_et_al_2020_Hact.rds\"                              ##  [62] \"Kattge_et_al_2020_Jmax.rds\"                              ##  [63] \"Kattge_et_al_2020_LeafAngle.rds\"                         ##  [64] \"Kattge_et_al_2020_LeafArea.rds\"                          ##  [65] \"Kattge_et_al_2020_LeafDensity.rds\"                       ##  [66] \"Kattge_et_al_2020_LeafDuration.rds\"                      ##  [67] \"Kattge_et_al_2020_LeafEPS.rds\"                           ##  [68] \"Kattge_et_al_2020_LeafPI0.rds\"                           ##  [69] \"Kattge_et_al_2020_LeafShape.rds\"                         ##  [70] \"Kattge_et_al_2020_LeafWidth.rds\"                         ##  [71] \"Kattge_et_al_2020_LifeForm.rds\"                          ##  [72] \"Kattge_et_al_2020_LigninPercent.rds\"                     ##  [73] \"Kattge_et_al_2020_Nfineroot.rds\"                         ##  [74] \"Kattge_et_al_2020_Nleaf.rds\"                             ##  [75] \"Kattge_et_al_2020_Nsapwood.rds\"                          ##  [76] \"Kattge_et_al_2020_PhenologyType.rds\"                     ##  [77] \"Kattge_et_al_2020_SeedLongevity.rds\"                     ##  [78] \"Kattge_et_al_2020_SeedMass.rds\"                          ##  [79] \"Kattge_et_al_2020_ShadeTol.rds\"                          ##  [80] \"Kattge_et_al_2020_SLA.rds\"                               ##  [81] \"Kattge_et_al_2020_SRL.rds\"                               ##  [82] \"Kattge_et_al_2020_Vmax.rds\"                              ##  [83] \"Kattge_et_al_2020_WoodC.rds\"                             ##  [84] \"Kattge_et_al_2020_WoodDensity.rds\"                       ##  [85] \"Kattge_et_al_2020_Z95.rds\"                               ##  [86] \"Klein_et_al_2014.rds\"                                    ##  [87] \"Lens_et_al_2016.rds\"                                     ##  [88] \"Liu_et_al_2019.rds\"                                      ##  [89] \"MartinStPaul_et_al_2017.rds\"                             ##  [90] \"Morris_et_al_2016.rds\"                                   ##  [91] \"Ocampo_Zuleta_Pausas_Paula_2023_FLAMITS_HeatContent.rds\" ##  [92] \"Petruzzellis_et_al_2021.rds\"                             ##  [93] \"Pisek_Adamson_2020_LeafAngle.rds\"                        ##  [94] \"Ramirez_Valiente_et_al_2020.rds\"                         ##  [95] \"Sjoman_et_al_2015.rds\"                                   ##  [96] \"Sjoman_et_al_2018.rds\"                                   ##  [97] \"Tavsanoglu_Pausas_2018_Hact.rds\"                         ##  [98] \"Tavsanoglu_Pausas_2018_LDMC.rds\"                         ##  [99] \"Tavsanoglu_Pausas_2018_LeafArea.rds\"                     ## [100] \"Tavsanoglu_Pausas_2018_LeafDuration.rds\"                 ## [101] \"Tavsanoglu_Pausas_2018_LeafShape.rds\"                    ## [102] \"Tavsanoglu_Pausas_2018_LifeForm.rds\"                     ## [103] \"Tavsanoglu_Pausas_2018_pDead.rds\"                        ## [104] \"Tavsanoglu_Pausas_2018_PhenologyType.rds\"                ## [105] \"Tavsanoglu_Pausas_2018_SeedMass.rds\"                     ## [106] \"Tavsanoglu_Pausas_2018_SLA.rds\"                          ## [107] \"Tavsanoglu_Pausas_2018_WoodDensity.rds\"                  ## [108] \"Tavsanoglu_Pausas_2018_Z95.rds\"                          ## [109] \"Tumber_Davila_et_al_2022.rds\"                            ## [110] \"Wang_et_al_2022_CPTD.rds\"                                ## [111] \"Wang_et_al_2024.rds\"                                     ## [112] \"Wolfe_et_al_2023.rds\"                                    ## [113] \"Yan_et_al_2020.rds\"                                      ## [114] \"Yebra_et_al_2024_LFMC.rds\"                               ## [115] \"Zhu_et_al_2016.rds\"                                      ## [116] \"Zhu_et_al_2018.rds\" SpParams<- traits4models::fill_medfate_traits(SpParams, harmonized_trait_path,                                                progress = TRUE, verbose = FALSE) ## ℹ Processing parameter: GrowthForm ## ✔ Processing parameter: GrowthForm [10.1s] ## ## ℹ Processing parameter: LifeForm ## ✔ Processing parameter: LifeForm [562ms] ## ## ℹ Processing parameter: LeafShape ## ✔ Processing parameter: LeafShape [2.1s] ## ## ℹ Processing parameter: PhenologyType ## ✔ Processing parameter: PhenologyType [1.4s] ## ## ℹ Processing parameter: DispersalType ## ✔ Processing parameter: DispersalType [3.5s] ## ## ℹ Processing parameter: t0gdd ## ✔ Processing parameter: t0gdd [32ms] ## ## ℹ Processing parameter: Tbgdd ## ✔ Processing parameter: Tbgdd [31ms] ## ## ℹ Processing parameter: Sgdd ## ✔ Processing parameter: Sgdd [31ms] ## ## ℹ Processing parameter: Phsen ## ✔ Processing parameter: Phsen [32ms] ## ## ℹ Processing parameter: Tbsen ## ✔ Processing parameter: Tbsen [31ms] ## ## ℹ Processing parameter: xsen ## ✔ Processing parameter: xsen [31ms] ## ## ℹ Processing parameter: ysen ## ✔ Processing parameter: ysen [33ms] ## ## ℹ Processing parameter: Ssen ## ✔ Processing parameter: Ssen [32ms] ## ## ℹ Processing parameter: LeafSize ## ✔ Processing parameter: LeafSize [1s] ## ## ℹ Processing parameter: Hmax/Hmed ## ✔ Processing parameter: Hmax/Hmed [8.2s] ## ## ℹ Processing parameter: Gs_P50 ## ✔ Processing parameter: Gs_P50 [44ms] ## ## ℹ Processing parameter: LFMC ## ✔ Processing parameter: LFMC [6.1s] ## ## ℹ Processing parameter: Kmax_stemxylem ## ✔ Processing parameter: Kmax_stemxylem [130ms] ## ## ℹ Processing parameter: Vmax298 ## ✔ Processing parameter: Vmax298 [43ms] ## ## ℹ Processing parameter: Jmax298 ## ✔ Processing parameter: Jmax298 [133ms] ## ## ℹ Processing parameter: Z95 ## ✔ Processing parameter: Z95 [248ms] ## ## ℹ Processing parameter: LeafAngle ## ✔ Processing parameter: LeafAngle [1.2s] ## ## ℹ Processing parameter: LeafDensity ## ✔ Processing parameter: LeafDensity [702ms] ## ## ℹ Processing parameter: WoodDensity ## ✔ Processing parameter: WoodDensity [1.1s] ## ## ℹ Processing parameter: SRL ## ✔ Processing parameter: SRL [190ms] ## ## ℹ Processing parameter: r635 ## ✔ Processing parameter: r635 [34ms] ## ## ℹ Processing parameter: LigninPercent ## ✔ Processing parameter: LigninPercent [40ms] ## ## ℹ Processing parameter: pDead ## ✔ Processing parameter: pDead [30ms] ## ## ℹ Processing parameter: SAV ## ✔ Processing parameter: SAV [29ms] ## ## ℹ Processing parameter: HeatContent ## ✔ Processing parameter: HeatContent [39ms] ## ## ℹ Processing parameter: LeafPI0 ## ✔ Processing parameter: LeafPI0 [65ms] ## ## ℹ Processing parameter: LeafEPS ## ✔ Processing parameter: LeafEPS [52ms] ## ## ℹ Processing parameter: LeafAF ## ✔ Processing parameter: LeafAF [31ms] ## ## ℹ Processing parameter: SLA ## ✔ Processing parameter: SLA [2.8s] ## ## ℹ Processing parameter: Al2As ## ✔ Processing parameter: Al2As [84ms] ## ## ℹ Processing parameter: conduit2sapwood ## ✔ Processing parameter: conduit2sapwood [37ms] ## ## ℹ Processing parameter: LeafWidth ## ✔ Processing parameter: LeafWidth [1.3s] ## ## ℹ Processing parameter: LeafDuration ## ✔ Processing parameter: LeafDuration [86ms] ## ## ℹ Processing parameter: Gswmax ## ✔ Processing parameter: Gswmax [32ms] ## ## ℹ Processing parameter: Gswmin ## ✔ Processing parameter: Gswmin [32ms] ## ## ℹ Processing parameter: VCleaf_P50 ## ✔ Processing parameter: VCleaf_P50 [71ms] ## ## ℹ Processing parameter: VCleaf_P12 ## ✔ Processing parameter: VCleaf_P12 [26ms] ## ## ℹ Processing parameter: VCleaf_P88 ## ✔ Processing parameter: VCleaf_P88 [26ms] ## ## ℹ Processing parameter: VCleaf_slope ## ✔ Processing parameter: VCleaf_slope [26ms] ## ## ℹ Processing parameter: VCstem_P50 ## Warning in get_trait_data(harmonized_trait_path, trait_name, is_numeric = TRUE, ## : NAs introduced by coercion ## ✔ Processing parameter: VCstem_P50 [113ms] ## ## ℹ Processing parameter: VCstem_P12 ## ✔ Processing parameter: VCstem_P12 [63ms] ## ## ℹ Processing parameter: VCstem_P88 ## ✔ Processing parameter: VCstem_P88 [62ms] ## ## ℹ Processing parameter: VCstem_slope ## ✔ Processing parameter: VCstem_slope [46ms] ## ## ℹ Processing parameter: VCroot_P50 ## ✔ Processing parameter: VCroot_P50 [47ms] ## ## ℹ Processing parameter: VCroot_P12 ## ✔ Processing parameter: VCroot_P12 [31ms] ## ## ℹ Processing parameter: VCroot_P88 ## ✔ Processing parameter: VCroot_P88 [30ms] ## ## ℹ Processing parameter: VCroot_slope ## ✔ Processing parameter: VCroot_slope [31ms] ## ## ℹ Processing parameter: Nleaf ## ✔ Processing parameter: Nleaf [1.4s] ## ## ℹ Processing parameter: Nsapwood ## ✔ Processing parameter: Nsapwood [214ms] ## ## ℹ Processing parameter: Nfineroot ## ✔ Processing parameter: Nfineroot [158ms] ## ## ℹ Processing parameter: SeedMass ## ✔ Processing parameter: SeedMass [4.3s] ## ## ℹ Processing parameter: SeedLongevity ## ✔ Processing parameter: SeedLongevity [222ms] ## ## ℹ Processing parameter: WoodC ## ✔ Processing parameter: WoodC [74ms] ## ## ℹ Processing parameter: CCleaf ## ✔ Processing parameter: CCleaf [42ms] ## ## ℹ Processing parameter: CCsapwood ## ✔ Processing parameter: CCsapwood [34ms] ## ## ℹ Processing parameter: CCfineroot ## ✔ Processing parameter: CCfineroot [31ms] ## ## ℹ Processing parameter: RSSG ## ✔ Processing parameter: RSSG [8ms] ##"},{"path":"https://emf-creaf.github.io/traits4models/articles/SpeciesParameterization.html","id":"checking-species-parameter-tables","dir":"Articles","previous_headings":"","what":"Checking species parameter tables","title":"Building species parameter tables for medfate","text":"using given species parameter table, important verify table contain missing values key parameters. medfate, parameters always required non-missing values called Strict (see SpParamsDefinition package medfate). Function check_medfate_params() checks, among things, strict parameters contain missing values: Normally, information plant trait data bases contain information species strict parameters, even qualitative traits. problem raised check_medfate_params() must addressed.","code":"check_medfate_params(SpParams) ## ! Strict parameter column 'GrowthForm' should not contain any missing value. ## ! Strict parameter column 'LifeForm' should not contain any missing value. ## ! Strict parameter column 'LeafShape' should not contain any missing value. ## ! Strict parameter column 'LeafSize' should not contain any missing value. ## ! Strict parameter column 'PhenologyType' should not contain any missing value. ## ! Strict parameter column 'DispersalType' should not contain any missing value. ## ! Strict parameter column 'Hmed' should not contain any missing value. ## ! Strict parameter column 'Hmax' should not contain any missing value. ## ! Strict parameter column 'Z95' should not contain any missing value. ## ! The data frame is not acceptable as species parameter table for medfate."},{"path":"https://emf-creaf.github.io/traits4models/articles/SpeciesParameterization.html","id":"completing-strict-parameters","dir":"Articles","previous_headings":"","what":"Completing strict parameters","title":"Building species parameter tables for medfate","text":"Package trait4models includes function complete_medfate_strict() perform imputation strict parameters, result table can used simulations. Imputation performed basis available information similar taxa. Taxonomically closer entities given priority higher order taxa (.e. species genus priorized sources searching species family): completion strict paratemers, species parameter table pass previous check: can store table use model simulations.","code":"SpParams <- traits4models::complete_medfate_strict(SpParams, progress = FALSE) check_medfate_params(SpParams) ## ✔ The data frame is acceptable as species parameter table for medfate."},{"path":[]},{"path":"https://emf-creaf.github.io/traits4models/articles/TraitDatabaseHarmonization.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Trait database harmonization","text":"Species parameter values drawn single data source. Moreover, availability plant trait data continuously increases, additional efforts made observational experimental studies (Kattge et al. 2020). means multiple data sources need harmonized species parameter tables build, terms : result harmonization needs stored harmonized format subsequent use creating species parameter tables. vignette illustrates harmonization procedures example data set using package trait4models usual tidyverse packages. IMPORTANT: vignette self-contained, sense reproduced without access data sets included. Nevertheless, intended serve example species parameterization regions.","code":"a) Nomenclature of measured variables. b) Measurement units. c) Taxonomy of the measured biological entities."},{"path":"https://emf-creaf.github.io/traits4models/articles/TraitDatabaseHarmonization.html","id":"required-packages","dir":"Articles","previous_headings":"Introduction","what":"Required packages","title":"Trait database harmonization","text":"Assuming traits4models installed, load common packages employ vignette:","code":"library(traits4models) library(tidyverse) library(readr)"},{"path":"https://emf-creaf.github.io/traits4models/articles/TraitDatabaseHarmonization.html","id":"example-dataset","dir":"Articles","previous_headings":"Introduction","what":"Example dataset","title":"Trait database harmonization","text":"example harmonization process, use data Bartlett et al. (2016). Much larger data sets can () processed, take much time. Bartlett et al. provide traits describe leaf/stem/root hydraulic vulnerability curves several species well water potential corresponding stomatal aperture. start loading dataset: data looks follows:","code":"DB_path <- \"~/OneDrive/EMF_datasets/PlantTraitDatabases/\" db <- readr::read_csv(paste0(DB_path, \"Sources/Bartlett_et_al_2016/pnas.1604088113.sd01.csv\")) db ## # A tibble: 310 × 26 ##    Group      Name          Biome `Evergreen/Decid` `Leaf P50 (MPa)` `TLP (MPa)` ##    <chr>      <chr>         <chr> <chr>                        <dbl>       <dbl> ##  1 Angiosperm Acacia gregg… Semi… E                            NA          -4.25 ##  2 Angiosperm Acer campest… Temp… D                            -1.32       -1.9  ##  3 Angiosperm Acer grandid… Temp… D                            NA          -2.45 ##  4 Angiosperm Acer monspes… Med.… D                            -1.89       -2.2  ##  5 Angiosperm Acer negundo  Temp… D                            NA          -1.59 ##  6 Angiosperm Acer pseudop… Temp… D                            -1.19       -1.4  ##  7 Angiosperm Acer rubrum   Temp… D                            -1.7        -1.59 ##  8 Angiosperm Acer sacchar… Temp… D                            NA          -2.78 ##  9 Angiosperm Adansonia ru… Trop… D                            NA          -1.12 ## 10 Angiosperm Adansonia za  Trop… D                            NA          -1.26 ## # ℹ 300 more rows ## # ℹ 20 more variables: `Stem P50 (MPa)` <dbl>, `Stem P88 (MPa)` <dbl>, ## #   `Stem P12 (MPa)` <dbl>, `Root P50 (MPa)` <dbl>, `Gs P50 (MPa)` <dbl>, ## #   `Gs 95 (MPa)` <dbl>, `plant Psi_lethal (MPa)` <dbl>, ## #   `Psimin_predawn (MPa)` <dbl>, `Psimin_midday (MPa)` <dbl>, ## #   `Psimin_midday and/or predawn Method` <chr>, ## #   `Reference (for Leaf P50)` <chr>, `Reference (for TLP)` <chr>, …"},{"path":"https://emf-creaf.github.io/traits4models/articles/TraitDatabaseHarmonization.html","id":"harmonizing-notation-and-measurement-units","dir":"Articles","previous_headings":"","what":"Harmonizing notation and measurement units","title":"Trait database harmonization","text":"first steps done harmonize trait notation, .e. plant traits referred , necessary, change units. Package traits4models includes data table called HarmonizedTraitDefinition presents plant trait definitions required notation units: case Bartlett’s dataset interested points vulnerability curve stomatal behavior. can check corresponding names HarmonizedTraitDefinition. example, Leaf P50 (MPa) water potential corresponding 50% conductance loss leaves, named VCleaf_P50 according HarmonizedTraitDefinition, . can use dplyr function rename() harmonize trait notation. case, plant traits interested given units MPa, HarmonizedTraitDefinition reports units traits, need harmonize measurement units. code notation harmonization follows: Note also renamed column containing plant species originalName. original name represents taxon name used data set owner/provider key taxonomic harmonization. result step contain originalName, plus one column harmonized trait, (preferably) two columns called Reference Priority. can add columns manually using: Column Reference indicates bibliographic source data, whereas Priority allows defining order trait data sources processed. highest priority order (lowest value Priority) given preference.","code":"db_var <- db |>   dplyr::select(Name, \"Leaf P50 (MPa)\", \"Stem P50 (MPa)\", \"Stem P88 (MPa)\", \"Stem P12 (MPa)\",                  \"Root P50 (MPa)\", \"Gs P50 (MPa)\", \"Gs 95 (MPa)\") |>   dplyr::rename(originalName = Name,                 VCleaf_P50 = \"Leaf P50 (MPa)\",                 VCstem_P50 = \"Stem P50 (MPa)\",                 VCstem_P12 = \"Stem P12 (MPa)\",                 VCstem_P88 = \"Stem P88 (MPa)\",                 VCroot_P50 = \"Root P50 (MPa)\",                 Gs_P50 = \"Gs P50 (MPa)\",                 Gs_P95 = \"Gs 95 (MPa)\") db_var <- db_var |>   dplyr::mutate(Reference = \"Bartlett et al. (2016)\",                 Priority = 3) db_var ## # A tibble: 310 × 10 ##    originalName    VCleaf_P50 VCstem_P50 VCstem_P88 VCstem_P12 VCroot_P50 Gs_P50 ##    <chr>                <dbl>      <dbl>      <dbl>      <dbl>      <dbl>  <dbl> ##  1 Acacia greggii       NA         NA         NA        NA          NA     NA    ##  2 Acer campestre       -1.32      -3.87      -4.60     -3.19       NA     NA    ##  3 Acer grandiden…      NA         -3.66      -7.14     -0.92       -0.86  NA    ##  4 Acer monspessu…      -1.89      -3.31      -4.61     -2.02       -1.6   NA    ##  5 Acer negundo         NA         -1.34      -2.74     -0.451      -0.3   NA    ##  6 Acer pseudopla…      -1.19      -2.37      -2.71     -1.95       NA     NA    ##  7 Acer rubrum          -1.7       -3.9       -6        -2.5        -1.69  NA    ##  8 Acer saccharum       NA         -3.97      NA        NA          -1.5   -1.56 ##  9 Adansonia rubr…      NA         -1.1       -2.82     -0.293      NA     NA    ## 10 Adansonia za         NA         -1.7       -3.49     -0.59       NA     NA    ## # ℹ 300 more rows ## # ℹ 3 more variables: Gs_P95 <dbl>, Reference <chr>, Priority <dbl>"},{"path":"https://emf-creaf.github.io/traits4models/articles/TraitDatabaseHarmonization.html","id":"taxonomic-harmonization","dir":"Articles","previous_headings":"","what":"Taxonomic harmonization","title":"Trait database harmonization","text":"Package traits4models currently relies World Flora Online taxonomic harmonization, via package WorldFlora (Kindt 2020) available CRAN. latter package requires static copy World Flora Online Taxonomic Backbone data can downloaded World Flora Online website. Note use different DOI reference reporting harmonization procedures. using v.2024.06. assume user already downloaded backbone stored file called classification.csv. Taxonomic harmonization done calling function harmonize_taxonomy_WFO() data frame (notation units already harmonized) path WFO backbone (omit console output): function requires input data frame contains column called originalName, identify original taxa names (additional columns simply transferred output). performs direct fuzzy matching, may lead large processing time large datasets. inspect resulting data frame, see additional columns, informing accepted names parent taxonomic entities:","code":"WFO_file <- paste0(DB_path, \"WFO_Backbone/classification.csv\") db_post <- traits4models::harmonize_taxonomy_WFO(db_var, WFO_file) head(db_post) ## # A tibble: 6 × 16 ##   originalName  acceptedName acceptedNameAuthorship family genus specificEpithet ##   <chr>         <chr>        <chr>                  <chr>  <chr> <chr>           ## 1 Acacia gregg… Senegalia g… (A.Gray) Britton & Ro… Fabac… Sene… greggii         ## 2 Acer campest… Acer campes… L.                     Sapin… Acer  campestre       ## 3 Acer grandid… Acer saccha… (Nutt.) Desmarais      Sapin… Acer  saccharum       ## 4 Acer monspes… Acer monspe… L.                     Sapin… Acer  monspessulanum  ## 5 Acer negundo  Acer negundo L.                     Sapin… Acer  negundo         ## 6 Acer pseudop… Acer pseudo… L.                     Sapin… Acer  pseudoplatanus  ## # ℹ 10 more variables: taxonRank <chr>, VCleaf_P50 <dbl>, VCstem_P50 <dbl>, ## #   VCstem_P88 <dbl>, VCstem_P12 <dbl>, VCroot_P50 <dbl>, Gs_P50 <dbl>, ## #   Gs_P95 <dbl>, Reference <chr>, Priority <dbl>"},{"path":"https://emf-creaf.github.io/traits4models/articles/TraitDatabaseHarmonization.html","id":"checking-harmonized-trait-data","dir":"Articles","previous_headings":"","what":"Checking harmonized trait data","title":"Trait database harmonization","text":"packages includes function check_harmonized_table() check whether given data frame conforms structure content later required parameter table filling: case, data set ready used parameter estimation. example, can run checking function data base taxonomic harmonization:","code":"check_harmonized_table(db_post) ## ✔ The data frame is acceptable as harmonized trait data source. check_harmonized_table(db_var) ## ! Taxonomy columns missing: acceptedName acceptedNameAuthorship family genus specificEpithet taxonRank ## ! The data frame is not acceptable as harmonized trait data source."},{"path":"https://emf-creaf.github.io/traits4models/articles/TraitDatabaseHarmonization.html","id":"storing-harmonized-dataset","dir":"Articles","previous_headings":"","what":"Storing harmonized dataset","title":"Trait database harmonization","text":"Harmonized data tables preferably stored compressed .rds format. Moreover, tables stored directory, Products/harmonized/ path.","code":"file_out <- paste0(DB_path, \"Products/harmonized/Bartlett_et_al_2016.rds\") saveRDS(db_post, file_out)"},{"path":[]},{"path":"https://emf-creaf.github.io/traits4models/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Miquel De Cáceres. Author, maintainer, copyright holder. Nicolas Martin-StPaul. Author. Adriana Tovar. Author. Víctor Granda. Author.","code":""},{"path":"https://emf-creaf.github.io/traits4models/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"De Cáceres M, Martin-StPaul N, Tovar , Granda V (2024). traits4models: plant traits model parameters. R package version 0.1.0, https://emf-creaf.github.io/traits4models/.","code":"@Manual{,   title = {traits4models: From plant traits to model parameters},   author = {Miquel {De Cáceres} and Nicolas Martin-StPaul and Adriana Tovar and Víctor Granda},   year = {2024},   note = {R package version 0.1.0},   url = {https://emf-creaf.github.io/traits4models/}, }"},{"path":[]},{"path":"https://emf-creaf.github.io/traits4models/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"From plant traits to model parameters","text":"Package traits4models designed facilitate creating plant species parameter tables process-based models forest function /dynamics. Specifically utility functions provided harmonize plant trait data bases defining tables . present, species parameter estimation tailored used models included packages medfate medfateland, functions added become useful process-based models.","code":""},{"path":"https://emf-creaf.github.io/traits4models/index.html","id":"package-installation","dir":"","previous_headings":"","what":"Package installation","title":"From plant traits to model parameters","text":"Since packages evolve together, installing traits4models normally requires --date version package medfate, available CRAN. latest stable versions GitHub follows (required package `remotes`` installed/updated first):","code":"remotes::install_github(\"emf-creaf/traits4models\")"},{"path":"https://emf-creaf.github.io/traits4models/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"From plant traits to model parameters","text":"IMPORTANT: package still active development.","code":""},{"path":"https://emf-creaf.github.io/traits4models/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"From plant traits to model parameters","text":"number vignettes illustrate initialize inputs run simulation models traits4models. can found package website.","code":""},{"path":"https://emf-creaf.github.io/traits4models/index.html","id":"companion-r-packages","dir":"","previous_headings":"","what":"Companion R packages","title":"From plant traits to model parameters","text":"development traits4models intended complement packages medfate medfateland. Two packages complete simulation framework, can used many purposes beyond forest modelling: Package meteoland allows generating daily weather input simulation models medfate medfateland. Package meteoland dependency medfate medfateland, can used independently obtain daily weather data. Package forestables allows reading harmonizing forest inventory data common data structure. Initialization workflows medfateland can use data forestables, data structures package can used many studies beyond modelling. relationships five packages illustrated figure , black arrows indicate package dependencies gray arrows indicate model parameter data provision.","code":""},{"path":"https://emf-creaf.github.io/traits4models/index.html","id":"authorship","dir":"","previous_headings":"","what":"Authorship","title":"From plant traits to model parameters","text":"set R packages developed maintained Ecosystem Modelling Facility unit CREAF (Spain), close collaboration researchers URFM-INRAE (France) CTFC (Spain).","code":""},{"path":"https://emf-creaf.github.io/traits4models/index.html","id":"funding","dir":"","previous_headings":"","what":"Funding","title":"From plant traits to model parameters","text":"Research project: Boosting process-based models project forest dynamics associated ecosystem services stand--regional scales (BOMFORES). Financial Entity: Ministerio de Ciencia e Innovación (PID2021-126679OB-I00). Duration : 01/09/2022 : 31/08/2024. PI: Miquel De Cáceres.","code":""},{"path":"https://emf-creaf.github.io/traits4models/reference/HarmonizedTraitDefinition.html","id":null,"dir":"Reference","previous_headings":"","what":"Plant trait definitions — HarmonizedTraitDefinition","title":"Plant trait definitions — HarmonizedTraitDefinition","text":"data frame accepted plant trait definitions.","code":""},{"path":"https://emf-creaf.github.io/traits4models/reference/HarmonizedTraitDefinition.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Plant trait definitions — HarmonizedTraitDefinition","text":"data frame parameters rows columns: Definition: Trait definition Notation: Trait notation required harmonization. Type: Either 'Numeric' (quantitative traits) 'String' (qualitative traits). Units: Required units quantitative traits.","code":""},{"path":"https://emf-creaf.github.io/traits4models/reference/HarmonizedTraitDefinition.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plant trait definitions — HarmonizedTraitDefinition","text":"","code":"data(HarmonizedTraitDefinition)"},{"path":"https://emf-creaf.github.io/traits4models/reference/SpParamsES.html","id":null,"dir":"Reference","previous_headings":"","what":"Data tables with species parameter definition and values for different countries — SpParamsES","title":"Data tables with species parameter definition and values for different countries — SpParamsES","text":"data sets species parameter tables resulting existing databases used conjunction national forest inventory data.","code":""},{"path":"https://emf-creaf.github.io/traits4models/reference/SpParamsES.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data tables with species parameter definition and values for different countries — SpParamsES","text":"Data frames SpParamsES (Spain), SpParamsFR (France), SpParamsAU (Australia) SpParamsUS (US) species genus rows column names equal parameter names   SpParamsDefinition (latter package medfate).","code":""},{"path":"https://emf-creaf.github.io/traits4models/reference/SpParamsES.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data tables with species parameter definition and values for different countries — SpParamsES","text":"SpParamsES, SpParamsFR,  SpParamsAU SpParamsUS species parameter data frames designed used National Forest Inventories Spain, France, Australia USA, respectively. Details procedures used obtain species parameter tables can found article https://emf-creaf.github.io/medfate/.","code":""},{"path":"https://emf-creaf.github.io/traits4models/reference/SpParamsES.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data tables with species parameter definition and values for different countries — SpParamsES","text":"","code":"data(SpParamsES) data(SpParamsFR) data(SpParamsUS) data(SpParamsAU)"},{"path":"https://emf-creaf.github.io/traits4models/reference/check_harmonized_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks trait data harmonization — check_harmonized_table","title":"Checks trait data harmonization — check_harmonized_table","text":"Checks input data frame appropriate format data model parameter filling.","code":""},{"path":"https://emf-creaf.github.io/traits4models/reference/check_harmonized_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks trait data harmonization — check_harmonized_table","text":"","code":"check_harmonized_table(x)"},{"path":"https://emf-creaf.github.io/traits4models/reference/check_harmonized_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks trait data harmonization — check_harmonized_table","text":"x data frame harmonized trait data","code":""},{"path":"https://emf-creaf.github.io/traits4models/reference/check_harmonized_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks trait data harmonization — check_harmonized_table","text":"(invisible) logical indicating whether data frame acceptable .","code":""},{"path":"https://emf-creaf.github.io/traits4models/reference/check_harmonized_table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Checks trait data harmonization — check_harmonized_table","text":"function checks input data frame conforms following requirements: columns called originalName, acceptedName, acceptedNameAuthorship, family, genus, specificEpithet, taxonRank,     returned function harmonize_taxonomy_WFO. names remaining columns \"Units\", \"Reference\", \"Priority\" valid trait name according notation required HarmonizedTraitDefinition. trait columns, values conform required type HarmonizedTraitDefinition.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/traits4models/reference/check_medfate_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks species parameter tables — check_medfate_params","title":"Checks species parameter tables — check_medfate_params","text":"Checks input data frame appropriate format data simulations medfate.","code":""},{"path":"https://emf-creaf.github.io/traits4models/reference/check_medfate_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks species parameter tables — check_medfate_params","text":"","code":"check_medfate_params(x)"},{"path":"https://emf-creaf.github.io/traits4models/reference/check_medfate_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks species parameter tables — check_medfate_params","text":"x data frame species parameter data","code":""},{"path":"https://emf-creaf.github.io/traits4models/reference/check_medfate_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks species parameter tables — check_medfate_params","text":"(invisible) boolean indicating whether data frame acceptable .","code":""},{"path":"https://emf-creaf.github.io/traits4models/reference/check_medfate_params.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Checks species parameter tables — check_medfate_params","text":"function performs following checks: input data frame. parameter names defined SpParamsDefinition listed columns. Strict parameters contain missing values. Strict parameters defined SpParamsDefinition.","code":""},{"path":"https://emf-creaf.github.io/traits4models/reference/complete_medfate_strict.html","id":null,"dir":"Reference","previous_headings":"","what":"Complete strict parameters for medfate — complete_medfate_strict","title":"Complete strict parameters for medfate — complete_medfate_strict","text":"Taxonomy-based imputation strict parameters medfate.","code":""},{"path":"https://emf-creaf.github.io/traits4models/reference/complete_medfate_strict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Complete strict parameters for medfate — complete_medfate_strict","text":"","code":"complete_medfate_strict(   SpParams,   params = NULL,   progress = TRUE,   verbose = FALSE )"},{"path":"https://emf-creaf.github.io/traits4models/reference/complete_medfate_strict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Complete strict parameters for medfate — complete_medfate_strict","text":"SpParams species parameter data frame completed progress boolean flag prompt progress. verbose boolean flag prompt detailed process information. param character vector strict parameters completed. missing, strict parameters checked completion.","code":""},{"path":"https://emf-creaf.github.io/traits4models/reference/complete_medfate_strict.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Complete strict parameters for medfate — complete_medfate_strict","text":"species parameter data frame imputed strict parameter values","code":""},{"path":"https://emf-creaf.github.io/traits4models/reference/complete_medfate_strict.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Complete strict parameters for medfate — complete_medfate_strict","text":"function performs imputation strict parameters basis non-missing values taxonomically-close taxa. Strict parameters defined SpParamsDefinition. First, taxon missing values subspecies, function looks values species level. Missing values species level filled data genus, family, order group levels, depending availability information. Quantitative values averaged, whereas qualitative values first non-missing value used. Beware imputation can result errors initial amount information scarce. Therefore, users revised output function correct potential errors manually, whenever detected.","code":""},{"path":"https://emf-creaf.github.io/traits4models/reference/fill_medfate_allometries.html","id":null,"dir":"Reference","previous_headings":"","what":"Populate tree species allometries — fill_medfate_allometries","title":"Populate tree species allometries — fill_medfate_allometries","text":"Internal functions populates allometric coefficients tree species genus input parameter table basis accepted name.","code":""},{"path":"https://emf-creaf.github.io/traits4models/reference/fill_medfate_allometries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Populate tree species allometries — fill_medfate_allometries","text":"","code":"fill_medfate_allometries(   SpParams,   allom_table,   allom_type = \"foliarbiomass\",   progress = TRUE,   verbose = FALSE )"},{"path":"https://emf-creaf.github.io/traits4models/reference/fill_medfate_allometries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Populate tree species allometries — fill_medfate_allometries","text":"SpParams data frame medfate species parameters populated allom_table data frame allometric parameters columns taxonomic entities (species genus) row names. allom_type string type allometry filled, either \"foliarbiomass\", \"barkthickness\", \"crownwidth\" \"crownratio\". progress boolean flag prompt progress. verbose boolean flag indicate extra console output.","code":""},{"path":"https://emf-creaf.github.io/traits4models/reference/fill_medfate_allometries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Populate tree species allometries — fill_medfate_allometries","text":"modified data frame medfate species parameters","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/traits4models/reference/fill_medfate_allometries.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Populate tree species allometries — fill_medfate_allometries","text":"Miquel De Cáceres Ainsa, EMF-CREAF","code":""},{"path":"https://emf-creaf.github.io/traits4models/reference/fill_medfate_inventory_traits.html","id":null,"dir":"Reference","previous_headings":"","what":"Fills parameters from inventory data — fill_medfate_inventory_traits","title":"Fills parameters from inventory data — fill_medfate_inventory_traits","text":"Extracts species parameter values forest inventory data","code":""},{"path":"https://emf-creaf.github.io/traits4models/reference/fill_medfate_inventory_traits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fills parameters from inventory data — fill_medfate_inventory_traits","text":"","code":"fill_medfate_inventory_traits(   SpParams,   x,   quantile_Hmed = 0.5,   quantile_Hmax = 0.99,   quantile_fHDmin = 0.05,   quantile_fHDmax = 0.95,   progress = TRUE,   verbose = FALSE )"},{"path":"https://emf-creaf.github.io/traits4models/reference/fill_medfate_inventory_traits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fills parameters from inventory data — fill_medfate_inventory_traits","text":"SpParams species parameter data frame filled. x list forest objects, data frame column called forest, whose elements class forest. quantile_Hmed Quantile Hmed quantile_Hmax Quantile Hmax quantile_fHDmin Quantile fHDmin quantile_fHDmax Quantile fHDmax progress boolean flag prompt progress. verbose boolean flag indicate extra console output.","code":""},{"path":"https://emf-creaf.github.io/traits4models/reference/fill_medfate_inventory_traits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fills parameters from inventory data — fill_medfate_inventory_traits","text":"modified data frame medfate species parameters","code":""},{"path":"https://emf-creaf.github.io/traits4models/reference/fill_medfate_inventory_traits.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fills parameters from inventory data — fill_medfate_inventory_traits","text":"function fills information species parameter table data target forest inventory simulations conducted. Matching performed `Species` forest inventory data `Name` species parameter table. following information extracted: GrowthForm: Growth form according usage forest inventory. example, species cited treeData tables shrubData tables, growth form \"Tree\". Hmax: Maximum tree/shrub height (cm), according `Height` column treeData shrubData quantile_Hmax parameter. Hmed: Median tree/shrub height (cm), according `Height` column treeData shrubData quantile_Hmed parameter. fHDmin, fHDmax: Minimum maximum height diameter ratio trees, according `Height` `DBH` columns treeData quantile_fHDmin quantile_fHDmax parameters, respectively.","code":""},{"path":"https://emf-creaf.github.io/traits4models/reference/fill_medfate_traits.html","id":null,"dir":"Reference","previous_headings":"","what":"Trait filling from harmonized data — fill_medfate_traits","title":"Trait filling from harmonized data — fill_medfate_traits","text":"Fills species parameter table medfate trait data harmonized data sources","code":""},{"path":"https://emf-creaf.github.io/traits4models/reference/fill_medfate_traits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trait filling from harmonized data — fill_medfate_traits","text":"","code":"fill_medfate_traits(   SpParams,   harmonized_trait_path,   priorization = TRUE,   erase_previous = TRUE,   replace_previous = TRUE,   progress = TRUE,   verbose = FALSE )"},{"path":"https://emf-creaf.github.io/traits4models/reference/fill_medfate_traits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trait filling from harmonized data — fill_medfate_traits","text":"SpParams species parameter data frame filled package medfate. harmonized_trait_path directory path RDS files harmonized trait databases . priorization boolean flag perform priorization data sources others. erase_previous boolean flag indicate previous values set NA populating new data replace_previous boolean flag indicate non-missing previous values replaced new data progress boolean flag prompt progress. verbose boolean flag prompt detailed process information.","code":""},{"path":"https://emf-creaf.github.io/traits4models/reference/fill_medfate_traits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trait filling from harmonized data — fill_medfate_traits","text":"modified data frame medfate species parameters","code":""},{"path":"https://emf-creaf.github.io/traits4models/reference/fill_medfate_traits.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Trait filling from harmonized data — fill_medfate_traits","text":"function processes multiple parameters medfate SpParams table. identifies row modify matching column 'AcceptedName' SpParams column acceptedName harmonized trait parameter sources. target taxon species, values taken rows trait_table species names match. target taxon genus, values taken rows genus . priorization = TRUE column priority_column available data sources, function prioritize sources higher priority first, filling parameters inspecting data sources lower priority.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/traits4models/reference/get_trait_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Load harmonized trait data — get_trait_data","title":"Load harmonized trait data — get_trait_data","text":"Functions load harmonized trait data","code":""},{"path":"https://emf-creaf.github.io/traits4models/reference/get_trait_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load harmonized trait data — get_trait_data","text":"","code":"load_harmonized_tables(harmonized_trait_path, progress = TRUE)  get_trait_data(   harmonized_trait_path,   trait_name,   is_numeric = TRUE,   progress = TRUE )  get_taxon_data(harmonized_trait_path, accepted_name, progress = TRUE)"},{"path":"https://emf-creaf.github.io/traits4models/reference/get_trait_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load harmonized trait data — get_trait_data","text":"harmonized_trait_path path harmonized trait data files (.rds) progress boolean flag prompt progress. trait_name string accepted trait name is_numeric boolean indicating whether trait numeric","code":""},{"path":"https://emf-creaf.github.io/traits4models/reference/get_trait_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load harmonized trait data — get_trait_data","text":"Function load_harmonized_tables() returns list harmonized trait data tables. Function get_trait_data() returns data table pooled information single trait. Function get_taxon_data() returns data table pooled information given taxon.","code":""},{"path":"https://emf-creaf.github.io/traits4models/reference/get_trait_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load harmonized trait data — get_trait_data","text":"functions add Priority = 1 trait data sources Priority column defined.","code":""},{"path":"https://emf-creaf.github.io/traits4models/reference/get_trait_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load harmonized trait data — get_trait_data","text":"","code":"if (FALSE) { # \\dontrun{  harmonized_trait_path = \"~/OneDrive/EMF_datasets/PlantTraitDatabases/Products/harmonized\"   # List of files  trait_files <- list.files(path = harmonized_trait_path)  head(trait_files)   # Load trait data  l <- load_harmonized_tables(harmonized_trait_path)  head(l[[1]])   get_trait_data(harmonized_trait_path, \"SLA\")   # Load taxon data  get_taxon_data(harmonized_trait_path, \"Pinus halepensis\") } # }"},{"path":"https://emf-creaf.github.io/traits4models/reference/harmonize_taxonomy_WFO.html","id":null,"dir":"Reference","previous_headings":"","what":"Harmonizes taxonomy — harmonize_taxonomy_WFO","title":"Harmonizes taxonomy — harmonize_taxonomy_WFO","text":"Harmonizes plant taxonomy according World Flora Online","code":""},{"path":"https://emf-creaf.github.io/traits4models/reference/harmonize_taxonomy_WFO.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Harmonizes taxonomy — harmonize_taxonomy_WFO","text":"","code":"harmonize_taxonomy_WFO(db, WFO_backbone_file, progress = TRUE, verbose = FALSE)"},{"path":"https://emf-creaf.github.io/traits4models/reference/harmonize_taxonomy_WFO.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Harmonizes taxonomy — harmonize_taxonomy_WFO","text":"db Data frame harmonize, species names column called 'originalName'. data frame normally include columns transferred unaltered output data frame. WFO_backbone_file Path file containing backbone World Flora Online. progress boolean flag prompt progress. verbose boolean flag print console output matching information.","code":""},{"path":"https://emf-creaf.github.io/traits4models/reference/harmonize_taxonomy_WFO.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Harmonizes taxonomy — harmonize_taxonomy_WFO","text":"data frame columns: originalName: Original taxon name given input data frame. acceptedName: Accepted taxon name according World Flora Online. acceptedNameAuthorship: Accepted taxon name authorship according World Flora Online. family: Taxonomic family accepted taxon. genus: Taxonomic genus accepted taxon. specificEpithet: Specific epithet accepted taxon. taxonRank: Taxonomic rank accepted taxon (e.g. \"species\", \"subspecies\", \"genus\", ...). Additional columns may present, coming input data frame. left unmodified.","code":""},{"path":"https://emf-creaf.github.io/traits4models/reference/init_medfate_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Initializes species parameter table — init_medfate_params","title":"Initializes species parameter table — init_medfate_params","text":"Creates empty plant parameter table medfate, populating taxonomic information desired.","code":""},{"path":"https://emf-creaf.github.io/traits4models/reference/init_medfate_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initializes species parameter table — init_medfate_params","text":"","code":"init_medfate_params(   x,   accepted_names = NULL,   fill_taxonomy = TRUE,   complete_rows = TRUE,   sort = TRUE,   verbose = FALSE )"},{"path":"https://emf-creaf.github.io/traits4models/reference/init_medfate_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initializes species parameter table — init_medfate_params","text":"x vector plant names, either taxon names arbitrary species group names (case, accepted_names supplied). Alternatively, data frame columns returned function harmonize_taxonomy_WFO. accepted_names Vector accepted taxon names length x. fill_taxonomy Boolean flag indicate taxonomic information filled (retrieved GBIF using package taxize). complete_rows Boolean flag indicate extra rows added cited species/genera (fill_taxonomy = TRUE). sort Boolean flag force sorting ascending order Name. verbose boolean flag indicate extra console output.","code":""},{"path":"https://emf-creaf.github.io/traits4models/reference/init_medfate_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initializes species parameter table — init_medfate_params","text":"data frame empty species parameter values suitable medfate simulations. data frame normally contain rows sp_names arguments fill_taxonomy complete_rows set TRUE default.","code":""},{"path":"https://emf-creaf.github.io/traits4models/reference/init_medfate_params.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Initializes species parameter table — init_medfate_params","text":"Taxonomic information retrieved using functions package taxize GBIF data source. x data frame returned function harmonize_taxonomy_WFO, taxonomy taken input data frame, package taxize used taxa family, .","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/traits4models/reference/init_medfate_params.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Initializes species parameter table — init_medfate_params","text":"Miquel De Cáceres Ainsa, EMF-CREAF","code":""},{"path":"https://emf-creaf.github.io/traits4models/reference/init_medfate_params.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initializes species parameter table — init_medfate_params","text":"","code":"# \\donttest{ # Simple example with two species sp_names <- c(\"Salvia rosmarinus\", \"Pinus contorta\") init_spparams(sp_names, verbose = TRUE) #> Error in init_spparams(sp_names, verbose = TRUE): could not find function \"init_spparams\"  # Simple example with three species using synonyms and subspecies sp_names <- c(\"Rosmarinus officinalis\", \"Pinus contorta\", \"Quercus ilex subsp. ilex\") accepted_names <- c(\"Salvia rosmarinus\", \"Pinus contorta\", \"Quercus ilex subsp. ilex\") init_spparams(sp_names, accepted_names, verbose = TRUE) #> Error in init_spparams(sp_names, accepted_names, verbose = TRUE): could not find function \"init_spparams\" # }"},{"path":"https://emf-creaf.github.io/traits4models/reference/populate_traits.html","id":null,"dir":"Reference","previous_headings":"","what":"Populate species parameters from trait data — populate_traits","title":"Populate species parameters from trait data — populate_traits","text":"Internal function fill medfate species trait parameters data table species traits","code":""},{"path":"https://emf-creaf.github.io/traits4models/reference/populate_traits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Populate species parameters from trait data — populate_traits","text":"","code":"populate_traits(   SpParams,   trait_table,   trait_mapping,   taxon_column,   genus_column = NULL,   priority_column = NULL,   character_traits = FALSE,   summary_function = \"median\",   summary_params = list(na.rm = TRUE),   scalar_functions = NULL,   replace_previous = FALSE,   erase_previous = FALSE,   verbose = FALSE )"},{"path":"https://emf-creaf.github.io/traits4models/reference/populate_traits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Populate species parameters from trait data — populate_traits","text":"SpParams data frame medfate species parameters populated. trait_table data frame functional traits columns plants rows. trait_mapping named string vector specifying trait data column used populate medfate param. Elements data base columns names medfate params. taxon_column string identifying column trait_table identifies taxon names). genus_column string identifying column trait_table identifies genus. NULL genus taken first word taxon names. priority_column string identifying column trait_table identifies priority data sources others (lower values priority processed earlier). character_traits Boolean flag treat traits character-valued summary_function function summarize multiple values taxonomic entity. default, median values taken quantitative traits frequent value taken qualitative traits. summary_params list summary function params (default na.rm=TRUE). scalar_functions named list scalar functions traits needing transformation units scaling. Names medfate params. replace_previous boolean flag indicate non-missing previous values replaced new data erase_previous boolean flag indicate previous values set NA populating new data verbose boolean flag indicate extra console output","code":""},{"path":"https://emf-creaf.github.io/traits4models/reference/populate_traits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Populate species parameters from trait data — populate_traits","text":"modified data frame medfate species parameters","code":""},{"path":"https://emf-creaf.github.io/traits4models/reference/populate_traits.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Populate species parameters from trait data — populate_traits","text":"Matches column 'AcceptedName' SpParams trait parameter sources. target taxon species, values taken rows trait_table species names match. target taxon genus, values taken rows genus . column priority_column supplied, function prioritize sources higher priority first.","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/traits4models/reference/populate_traits.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Populate species parameters from trait data — populate_traits","text":"Miquel De Cáceres Ainsa, EMF-CREAF","code":""},{"path":"https://emf-creaf.github.io/traits4models/reference/traits4models-package.html","id":null,"dir":"Reference","previous_headings":"","what":"traits4models: From plant trait data to model parameters — traits4models-package","title":"traits4models: From plant trait data to model parameters — traits4models-package","text":"Utility functions facilitate harmonizing plant trait data bases defining species parameter tables process-based models","code":""},{"path":[]},{"path":"https://emf-creaf.github.io/traits4models/reference/traits4models-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"traits4models: From plant trait data to model parameters — traits4models-package","text":"Maintainer: Miquel De Cáceres miquelcaceres@gmail.com [ORCID](https://orcid.org/0000-0001-7132-2080) Author: Nicolas Martin-StPaul [ORCID](https://orcid.org/0000-0001-7574-0108) Author: Adriana Tovar Author: Víctor Granda [ORCID](https://orcid.org/0000-0002-0469-1991)","code":""}]
